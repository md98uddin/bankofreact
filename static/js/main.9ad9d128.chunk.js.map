{"version":3,"sources":["components/commons/GreetingCard.jsx","components/Home.jsx","components/Login.jsx","components/UserProfile.jsx","components/commons/AccountBalance.jsx","components/commons/DisplayTransactions.jsx","components/Debits.jsx","components/Credits.jsx","services.js","App.js","serviceWorker.js","index.js"],"names":["GreetingCards","accountBalance","currentUser","className","style","width","margin","textAlign","id","username","Date","getMonth","getDate","getFullYear","Home","props","state","signedIn","signed","document","body","backgroundColor","this","marginRight","to","GreetingCard","nextProps","prevState","Component","Login","handleChange","e","setState","target","value","password","exact","marginTop","color","type","onChange","onClick","onLoginSubmit","UserProfile","marginLeft","src","memberSince","logout","AccountBalance","toFixed","DisplayTransactions","transactions","onSubmit","title","placeholder","map","transaction","key","amount","description","date","length","substring","replace","Debits","onDebitSubmit","addDebit","debits","Credits","onCreditSubmit","addCredit","credits","App","user","amt","desc","newObj","newDebitTransactions","debitsTransactions","unshift","newCreditTransactions","creditTransactions","parseInt","Axios","get","then","res","data","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ad9d128.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst GreetingCards = ({ accountBalance, currentUser }) => {\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      style={{ width: \"40%\", margin: \"40px 0px 0px 30%\", textAlign: \"center\" }}\r\n      id=\"greetings\"\r\n    >\r\n      <div className=\"card-header\">\r\n        {\" \"}\r\n        Hello, your balance is {accountBalance < 0 ? \"bad\" : \"healthy\"}!\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{currentUser && currentUser.username}</h5>\r\n        <p className=\"card-text\">\r\n          Today's Date is{\" \"}\r\n          {`${\r\n            new Date().getMonth() + 1\r\n          }/${new Date().getDate()}/${new Date().getFullYear()}`}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GreetingCards;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport GreetingCards from \"./commons/GreetingCard\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      signedIn: this.props.signed,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (prevState.signedIn !== nextProps.signedIn) {\r\n      return {\r\n        signedIn: nextProps.signedIn,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = \"grey\";\r\n  }\r\n\r\n  render() {\r\n    return this.state.signedIn ? (\r\n      <div className=\"container\" style={{ textAlign: \"center\" }} id=\"home-div\">\r\n        <h1>Welcome to React Bank!</h1>\r\n        <p>Click any link below which you wish to see.</p>\r\n        <ul style={{ textAlign: \"center\", marginRight: \"25px\" }} id=\"link-btn\">\r\n          <button className=\"btn-sm \">\r\n            {\" \"}\r\n            <Link to=\"/userProfile\">Profile</Link>\r\n          </button>\r\n          <button className=\"btn-sm \">\r\n            <Link to=\"/debits\">Debits</Link>\r\n          </button>\r\n          <button className=\"btn-sm \">\r\n            <Link to=\"/credits\">Credits</Link>\r\n          </button>\r\n        </ul>\r\n        <GreetingCards\r\n          accountBalance={this.props.accountBalance}\r\n          currentUser={this.props.currentUser}\r\n        />\r\n      </div>\r\n    ) : (\r\n      <Redirect to=\"/login\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: null,\r\n      password: null,\r\n      signedIn: this.props.signedIn,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (prevState.signedIn !== nextProps.signedIn) {\r\n      return {\r\n        signedIn: nextProps.signedIn,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = \"rgb(107, 1, 63)\";\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { username, signedIn } = this.state;\r\n    return !signedIn ? (\r\n      <div\r\n        className=\"container\"\r\n        style={{ textAlign: \"center\", marginTop: \"10%\" }}\r\n      >\r\n        <h1 style={{ color: \"white\" }}>Bank Of React Auth</h1>\r\n        <label style={{ color: \"white\" }}>Username</label>\r\n        <br />\r\n        <input type=\"text\" onChange={this.handleChange} id=\"username\" />\r\n        <br />\r\n        <label style={{ color: \"white\" }}>Password</label>\r\n        <br />\r\n        <input type=\"password\" onChange={this.handleChange} id=\"password\" />\r\n        <br />\r\n        <button\r\n          style={{ marginTop: \"10px\" }}\r\n          className=\"btn-sm btn-primary\"\r\n          onClick={() => this.props.onLoginSubmit(username)}\r\n        >\r\n          Login\r\n        </button>\r\n      </div>\r\n    ) : (\r\n      <Redirect exact to=\"/\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass UserProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      signedIn: this.props.signedIn,\r\n      accountBalance: this.props.accountBalance,\r\n      currentUser: this.props.currentUser,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (\r\n      nextProps.signedIn !== prevState.signedIn ||\r\n      nextProps.accountBalance !== prevState.accountBalance\r\n    ) {\r\n      return {\r\n        signedIn: nextProps.signedIn,\r\n        accountBalance: nextProps.accountBalance,\r\n        currentUser: nextProps.currentUser,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { signedIn, currentUser } = this.state;\r\n    return signedIn ? (\r\n      <div\r\n        className=\"container\"\r\n        style={{ textAlign: \"center\", marginTop: \"5%\" }}\r\n      >\r\n        <h1 id=\"debit-title\" style={{ marginLeft: \"130px\" }}>\r\n          UserProfile\r\n        </h1>\r\n        <div className=\"card\" id=\"userCard\">\r\n          <div className=\"card-body\">\r\n            <img src=\"https://static.toiimg.com/thumb/72975551.cms?width=200&height=200&imgsize=881753\" />\r\n            <p>Username: {currentUser && currentUser.username}</p>\r\n            <p>Member Since: {currentUser && currentUser.memberSince}</p>\r\n            <button className=\"btn-primary\" onClick={() => this.props.logout()}>\r\n              Log Out\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <Redirect to=\"/login\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\n\r\nconst AccountBalance = ({ accountBalance }) => {\r\n  return (\r\n    <div className=\"card\" id=\"account-balance\">\r\n      <div className=\"card-header\">Account Balance</div>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">${accountBalance.toFixed(2)}</h5>\r\n        <p className=\"card-text\">\r\n          {\" \"}\r\n          Updated balance on\r\n          {` ${\r\n            new Date().getMonth() + 1\r\n          }/${new Date().getDate()}/${new Date().getFullYear()}`}{\" \"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountBalance;\r\n","import React from \"react\";\r\n\r\nconst DisplayTransactions = ({ transactions, onChange, onSubmit, title }) => {\r\n  return (\r\n    transactions && (\r\n      <div className=\"container\" style={{ textAlign: \"center\" }}>\r\n        <h1 id=\"debits-title\">All Transactions</h1>\r\n        <label id=\"debits-title\">Description</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          placeholder=\"laffy taffy\"\r\n          id=\"description\"\r\n        />\r\n        <label id=\"debits-title\">Amount</label>\r\n        <input\r\n          type=\"number\"\r\n          onChange={onChange}\r\n          placeholder=\"60.37\"\r\n          id=\"amount\"\r\n        />\r\n        <button onClick={() => onSubmit()}>{title}</button>\r\n        <div id=\"transactions\">\r\n          {\" \"}\r\n          {transactions.map((transaction) => (\r\n            <span key={transaction.id}>\r\n              <p id=\"debits-title\">\r\n                Amount ${transaction.amount} | Description{\" \"}\r\n                {transaction.description} | Date{\" \"}\r\n                {transaction.date.length > 12\r\n                  ? transaction.date.substring(5, 7) +\r\n                    \"/\" +\r\n                    transaction.date.substring(8, 10) +\r\n                    \"/\" +\r\n                    transaction.date.substring(0, 4)\r\n                  : transaction.date.replace(\"T\", \"\")}\r\n              </p>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default DisplayTransactions;\r\n","import React, { Component } from \"react\";\r\nimport AccountBalance from \"./commons/AccountBalance\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport DisplayTransactions from \"./commons/DisplayTransactions\";\r\n\r\nclass Debits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountBalance: this.props.accountBalance,\r\n      signedIn: this.props.signedIn,\r\n      debits: this.props.debits,\r\n      description: null,\r\n      amount: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (\r\n      nextProps.signedIn !== prevState.signedIn ||\r\n      nextProps.accountBalance !== prevState.accountBalance\r\n    ) {\r\n      return {\r\n        signedIn: nextProps.signedIn,\r\n        accountBalance: nextProps.accountBalance,\r\n        debits: nextProps.debits,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onDebitSubmit = () => {\r\n    const { amount, description } = this.state;\r\n    if (amount && description) {\r\n      this.props.addDebit(amount, description);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.signedIn ? (\r\n      <div className=\"container\" style={{ textAlign: \"center\" }}>\r\n        <h1 id=\"debits-title\" style={{ marginLeft: \"75px\" }}>\r\n          Debits\r\n        </h1>\r\n        <AccountBalance accountBalance={this.state.accountBalance} />\r\n        <DisplayTransactions\r\n          transactions={this.state.debits}\r\n          onChange={this.onChange}\r\n          onSubmit={this.onDebitSubmit}\r\n          title=\"Add Debit\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      <Redirect to=\"/login\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Debits;\r\n","import React, { Component } from \"react\";\r\nimport AccountBalance from \"./commons/AccountBalance\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport DisplayTransactions from \"./commons/DisplayTransactions\";\r\n\r\nclass Credits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountBalance: this.props.accountBalance,\r\n      signedIn: this.props.signedIn,\r\n      credits: this.props.credits,\r\n      description: null,\r\n      amount: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (\r\n      nextProps.signedIn !== prevState.signedIn ||\r\n      nextProps.accountBalance !== prevState.accountBalance\r\n    ) {\r\n      return {\r\n        signedIn: nextProps.signedIn,\r\n        accountBalance: nextProps.accountBalance,\r\n        credits: nextProps.credits,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onCreditSubmit = () => {\r\n    const { amount, description } = this.state;\r\n    if (amount && description) {\r\n      this.props.addCredit(amount, description);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.signedIn ? (\r\n      <div className=\"container\" style={{ textAlign: \"center\" }}>\r\n        <h1 id=\"debits-title\" style={{ marginLeft: \"85px\" }}>\r\n          Credits\r\n        </h1>\r\n        <AccountBalance accountBalance={this.state.accountBalance} />\r\n        <DisplayTransactions\r\n          transactions={this.state.credits}\r\n          onChange={this.onChange}\r\n          onSubmit={this.onCreditSubmit}\r\n          title=\"Add Credit\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      <Redirect to=\"/login\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Credits;\r\n","export function getDate() {\r\n  var month =\r\n    new Date().getMonth() + 1 < 10\r\n      ? \"0\" + (new Date().getMonth() + 1)\r\n      : new Date().getMonth() + 1;\r\n  var day =\r\n    new Date().getDate() < 10\r\n      ? \"0\" + new Date().getDate()\r\n      : new Date().getDate();\r\n  var date = month + \"/\" + day + \"/\" + new Date().getFullYear() + \"T\";\r\n\r\n  return date;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./css/styling.css\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\nimport UserProfile from \"./components/UserProfile\";\r\nimport Debits from \"./components/Debits\";\r\nimport Credits from \"./components/Credits\";\r\nimport Axios from \"axios\";\r\nimport { getDate } from \"./services\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      signedIn: false,\r\n      accountBalance: null,\r\n      currentUser: null,\r\n      debitsTransactions: [],\r\n      creditTransactions: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var debits;\r\n    Axios.get(\"https://moj-api.herokuapp.com/debits\").then((res) => {\r\n      debits = res.data;\r\n      Axios.get(\"https://moj-api.herokuapp.com/credits\").then((res) => {\r\n        this.setState({\r\n          debitsTransactions: debits,\r\n          creditTransactions: res.data,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  //mock login\r\n  onLoginSubmit = (username) => {\r\n    const user = { username, memberSince: \"08/15/2003\" };\r\n    this.setState({\r\n      signedIn: true,\r\n      accountBalance: 32675.89,\r\n      currentUser: user,\r\n    });\r\n  };\r\n\r\n  addDebit = (amt, desc) => {\r\n    var newObj = {\r\n      id: amt + desc + 895695,\r\n      amount: amt,\r\n      description: desc,\r\n      date: getDate(),\r\n    };\r\n\r\n    var newDebitTransactions = this.state.debitsTransactions;\r\n    newDebitTransactions.unshift(newObj);\r\n\r\n    return this.setState({\r\n      debitsTransactions: newDebitTransactions,\r\n      accountBalance: this.state.accountBalance - amt,\r\n    });\r\n  };\r\n\r\n  addCredit = (amt, desc) => {\r\n    var newObj = {\r\n      id: amt + desc + 895695,\r\n      amount: amt,\r\n      description: desc,\r\n      date: getDate(),\r\n    };\r\n\r\n    var newCreditTransactions = this.state.creditTransactions;\r\n    newCreditTransactions.unshift(newObj);\r\n\r\n    return this.setState({\r\n      creditTransactions: newCreditTransactions,\r\n      accountBalance: parseInt(this.state.accountBalance) + parseInt(amt),\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    return this.setState({\r\n      signedIn: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currentUser,\r\n      accountBalance,\r\n      signedIn,\r\n      debitsTransactions,\r\n      creditTransactions,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={(props) => (\r\n              <Home\r\n                {...props}\r\n                signedIn={signedIn}\r\n                accountBalance={accountBalance}\r\n                currentUser={currentUser}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/login\"\r\n            render={(props) => (\r\n              <Login\r\n                {...props}\r\n                onLoginSubmit={this.onLoginSubmit}\r\n                signedIn={signedIn}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/userProfile\"\r\n            render={(props) => (\r\n              <UserProfile\r\n                {...props}\r\n                currentUser={currentUser}\r\n                accountBalance={accountBalance}\r\n                signedIn={signedIn}\r\n                logout={this.logout}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/debits\"\r\n            render={(props) => (\r\n              <Debits\r\n                {...props}\r\n                accountBalance={accountBalance}\r\n                signedIn={signedIn}\r\n                debits={debitsTransactions}\r\n                addDebit={this.addDebit}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/credits\"\r\n            render={(props) => (\r\n              <Credits\r\n                {...props}\r\n                accountBalance={accountBalance}\r\n                signedIn={signedIn}\r\n                credits={creditTransactions}\r\n                addCredit={this.addCredit}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      (\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}